"""
App Streamlit de diagn√≥stico para verificar vari√°veis de ambiente e conex√£o
"""
import streamlit as st
import os
from dotenv import load_dotenv

# Tentar carregar vari√°veis de ambiente
load_dotenv()

def main():
    st.title("üîß Diagn√≥stico da Aplica√ß√£o")
    
    # Verificar vari√°veis de ambiente
    st.subheader("1. Vari√°veis de Ambiente")
    supabase_url = os.environ.get("SUPABASE_URL")
    supabase_key = os.environ.get("SUPABASE_KEY")
    
    if supabase_url:
        st.success("‚úÖ SUPABASE_URL est√° definida")
        st.text(f"URL: {supabase_url[:50]}...")
    else:
        st.error("‚ùå SUPABASE_URL N√ÉO est√° definida")
    
    if supabase_key:
        st.success("‚úÖ SUPABASE_KEY est√° definida")
    else:
        st.error("‚ùå SUPABASE_KEY N√ÉO est√° definida")
    
    # Verificar porta
    st.subheader("2. Configura√ß√£o de Porta")
    port = os.environ.get("PORT") or os.environ.get("STREAMLIT_SERVER_PORT")
    if port:
        st.success(f"‚úÖ Porta configurada: {port}")
    else:
        st.info("‚ÑπÔ∏è Porta n√£o definida explicitamente (usar√° padr√£o)")
    
    # Testar imports cr√≠ticos
    st.subheader("3. Teste de Imports")
    try:
        import streamlit as st
        st.success("‚úÖ Streamlit importado com sucesso")
    except Exception as e:
        st.error(f"‚ùå Erro ao importar Streamlit: {e}")
    
    try:
        from sentence_transformers import SentenceTransformer
        st.success("‚úÖ Sentence Transformers importado com sucesso")
    except Exception as e:
        st.error(f"‚ùå Erro ao importar Sentence Transformers: {e}")
    
    try:
        import faiss
        st.success("‚úÖ FAISS importado com sucesso")
    except Exception as e:
        st.error(f"‚ùå Erro ao importar FAISS: {e}")
    
    try:
        import easyocr
        st.success("‚úÖ EasyOCR importado com sucesso")
    except Exception as e:
        st.error(f"‚ùå Erro ao importar EasyOCR: {e}")
    
    # Testar conex√£o com Supabase
    st.subheader("4. Teste de Conex√£o com Supabase")
    if supabase_url and supabase_key:
        try:
            from supabase import create_client
            supabase = create_client(supabase_url, supabase_key)
            # Testar uma opera√ß√£o simples
            response = supabase.table("documentos").select("id").limit(1).execute()
            st.success("‚úÖ Conex√£o com Supabase estabelecida com sucesso!")
        except Exception as e:
            st.error(f"‚ùå Erro na conex√£o com Supabase: {e}")
    else:
        st.warning("‚ö†Ô∏è N√£o √© poss√≠vel testar conex√£o - vari√°veis n√£o definidas")
    
    st.info("üí° Esta √© uma vers√£o de diagn√≥stico da aplica√ß√£o para identificar problemas.")

if __name__ == "__main__":
    main()